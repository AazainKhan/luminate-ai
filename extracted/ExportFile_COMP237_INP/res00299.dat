<?xml version="1.0" encoding="UTF-8"?>
<CONTENT id="_800661_1"><TITLE value="Topic 4.2: Greedy search"/><TITLECOLOR value="#000000"/><DESCRIPTION
   value=""/><BODY><TEXT>&lt;div data-layout-row="22d656cb-285a-467f-9e4a-1d4d4acdeba8"&gt;&lt;div data-layout-column="4a0e865c-b108-4c4e-81c8-025cfd015739" data-layout-column-width="12"&gt;&lt;div data-bbid="bbml-editor-id_d0cfa330-08d4-4924-a3da-3753dfec5ac3"&gt;&lt;h4&gt;Topic 4.2: Greedy search&lt;/h4&gt;&lt;br&gt;&lt;h5&gt;&lt;span style="color: #1c8845"&gt;Greedy search&lt;/span&gt;&lt;/h5&gt;&lt;br&gt;&lt;p&gt;One famous algorithm is &lt;span style="color: #000000"&gt;&lt;strong&gt;"Greedy search"&lt;/strong&gt;&lt;/span&gt;. In this algorithm,&amp;nbsp;&lt;span style="color: #000000"&gt;&lt;strong&gt;h(n)&lt;/strong&gt;&lt;/span&gt; is used to rank the nodes on &lt;strong&gt;OPEN&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;We expand the node with the lowest h-value.&lt;/li&gt;&lt;li&gt;We are &lt;span style="color: #000000"&gt;&lt;strong&gt;greedily&lt;/strong&gt;&lt;/span&gt; trying to achieve a quick solution that appears to be &lt;span style="color: #000000"&gt;&lt;strong&gt;closest&lt;/strong&gt;&lt;/span&gt; to the goal.&lt;/li&gt;&lt;li&gt;This method&lt;span style="color: #000000"&gt;&lt;strong&gt; ignores the cost&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #000000"&gt; &lt;/span&gt;of getting to &lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt;, so it can be lead astray exploring nodes that cost a lot but seem to be close to the goal.&lt;/li&gt;&lt;/ul&gt;&lt;h6&gt;Watch this video to learn more:&lt;/h6&gt;&lt;p style="text-align: center;"&gt;&lt;a href="https://mediasite.centennialcollege.ca/Mediasite/Play/2117db7272d3457eb653e9fd66ac05051d" data-bbtype="video" data-bbfile="{&amp;quot;src&amp;quot;:&amp;quot;https://mediasite.centennialcollege.ca/Mediasite/Play/2117db7272d3457eb653e9fd66ac05051d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;https://mediasite.centennialcollege.ca/Mediasite/Play/2117db7272d3457eb653e9fd66ac05051d&amp;quot;}"&gt;https://mediasite.centennialcollege.ca/Mediasite/Play/2117db7272d3457eb653e9fd66ac05051d&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;Let's have a look at the below figure; as indicated:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;h(node1) = 20&lt;/li&gt;&lt;li&gt;h(node4) = 10&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;and the step cost can be either 10 or 100 at the start node.&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692670_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Greedy algorithm example&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_Greedy_example.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_Greedy_example.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Notice that the algorithm will select the following path:&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Start (s) → Node(4) → Node(5) →Goal (G)&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;This is not the most optimal path.&lt;/p&gt;&lt;p&gt;Now, let us go back to example of the Romania path search illustrated in the below figure and let us see how the greedy algorithm will work using the straight line shortest distance heuristic i.e &lt;span style="color: #1c8845"&gt;&lt;strong&gt;h(n)&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;&lt;sub&gt;SLD&lt;/sub&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;sub&gt;.&lt;/sub&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Accordingly the evaluation function:&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;f(n) = h(n)&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;&lt;sub&gt;SLD&lt;/sub&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692669_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Romania path finding problem with heuristic &amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_Romania_Heuritic.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_Romania_Heuritic.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The algorithm will carry out the following steps:&lt;/p&gt;&lt;p&gt;&lt;span style="color: #046ef6"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692671_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;First Step&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_greedy_1.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_greedy_1.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: #046ef6"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692672_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Second step greedy algorithm&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_greedy_2.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_greedy_2.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: #046ef6"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692673_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Third step greedy algorithm&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_greedy_3.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_greedy_3.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;So, the path that the agent will take is:&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Arad → Sibiu → Fagaras → Bucharest&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Now, let us wonder, &lt;span style="color: #000000"&gt;&lt;strong&gt;is this the most optimal (shortest) path?&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The answer is &lt;strong&gt;No.&lt;/strong&gt;&amp;nbsp;Have a look at the below figure&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692674_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Greedy algorithm versus optimal solution&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_greedy_optimal.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_greedy_optimal.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;As shown in the figure above, the greedy algorithm will select the red path which is:&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Arad → Sibiu → Fagaras → Bucharest&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;at a total cost of&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;&amp;nbsp;Cost = 140+99+211 = 450&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;While the most optimal path is the green on which is:&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Arad → Sibiu → Rimnicu Vilcia → Pitesti → Bucharest&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt; at a total cost of &lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;&lt;strong&gt;Cost =&amp;nbsp;140+80+97+101 = 418&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;Greedy search performance evaluation&lt;/h5&gt;&lt;br&gt;&lt;p&gt;As per the below figure, the greedy algorithm&amp;nbsp;expands a node that it thinks is closest to a goal state:&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692675_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Greedy performance&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M4_greedy_P1.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M4_greedy_P1.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Based on the above figure, and assuming the depth of the tree is m tiers, at each level the branching accumulates to b&lt;sup&gt;x&lt;/sup&gt;&amp;nbsp;where &lt;strong&gt;&lt;em&gt;x&lt;/em&gt;&lt;/strong&gt; is the tier (You can refer back to the search algorithms performance criteria explained in&amp;nbsp;&lt;a href="/bbcswebdav/courses/COMP237_INP.DEV.ZIP/web_resources/d2l/common/dialogs/quickLink/quickLink.d2l?ou=672556&amp;amp;type=content&amp;amp;rcode=CENCOL-2572303"&gt;Topic 3.2&lt;/a&gt;.)&lt;/p&gt;&lt;p&gt;The four performance measures would be as follows:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;span style="color: #000000"&gt;&lt;strong&gt;Completeness:&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #000000"&gt;&amp;nbsp;&lt;/span&gt;it is complete in a finite search space.&lt;/li&gt;&lt;li&gt;&lt;span style="color: #000000"&gt;&lt;strong&gt;Optimal:&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&lt;/strong&gt;No&lt;/li&gt;&lt;li&gt;&lt;span style="color: #000000"&gt;&lt;strong&gt;Time complexity:&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;O(|V|) but can be reduced with a good heuristic&amp;nbsp;to O(bm)&lt;/li&gt;&lt;li&gt;&lt;span style="color: #000000"&gt;&lt;strong&gt;Space complexity:&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;strong&gt;O(|V|)&amp;nbsp;&lt;/strong&gt;but can be reduced with a good heuristic&amp;nbsp;to O(bm)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;The worst-case scenario:&lt;/strong&gt; Greedy will work like a badly-guided DFS.&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h5&gt;References&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Artificial intelligence a modern approach&lt;/strong&gt; by Stuart J. Russell and Peter Norvig. Chapter 3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Hands-On Artificial Intelligence for Search&lt;/strong&gt; by Devangini Patel. Chapter 4.&lt;/li&gt;&lt;li&gt;&lt;a href="http://ai.berkeley.edu/home.html"&gt;UC Berkeley CS188 Intro to AI&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</TEXT><TYPE
   value="H"/></BODY><DATES><CREATED value="2024-10-04 18:31:43 EDT"/><UPDATED value="2024-11-11 20:26:14 EST"/><START
   value=""/><END value=""/></DATES><FLAGS><ISAVAILABLE value="true"/><ISFROMCARTRIDGE value="false"/><ISFOLDER
   value="false"/><ISDESCRIBED value="false"/><ISTRACKED value="true"/><ISLESSON value="false"/><ISSEQUENTIAL
   value="false"/><ALLOWGUESTS value="true"/><ALLOWOBSERVERS value="true"/><LAUNCHINNEWWINDOW
   value="false"/><ISREVIEWABLE value="false"/><ISGROUPCONTENT value="false"/><ISSAMPLECONTENT
   value="false"/><PARTIALLYVISIBLE value="false"/><HASTHUMBNAIL value="false"/></FLAGS><CONTENTHANDLER
  value="resource/x-bb-document"/><RENDERTYPE value="REGULAR"/><FOLDERTYPE value=""/><URL value=""/><VIEWMODE
  value="TEXT_ICON_ONLY"/><OFFLINENAME value=""/><OFFLINEPATH value=""/><LINKREF value=""/><PARENTID
  value="_800504_1"/><REVIEWABLEREASON value="NONE"/><VERSION value="3"/><THUMBNAILALT value=""/><AISTATE
  value="No"/><AIACCEPTINGUSER value=""/><EXTENDEDDATA/><FILES/></CONTENT>
