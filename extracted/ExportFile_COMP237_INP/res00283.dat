<?xml version="1.0" encoding="UTF-8"?>
<CONTENT id="_800644_1"><TITLE value="Topic 2.1: Intelligent Agents"/><TITLECOLOR value="#000000"/><DESCRIPTION
   value=""/><BODY><TEXT>&lt;div data-layout-row="0c6a2294-473f-4399-9df8-2e615a70b78a"&gt;&lt;div data-layout-column="5a296e2b-6823-45d4-95f4-7002cf1f33f7" data-layout-column-width="12"&gt;&lt;div data-bbid="bbml-editor-id_825475c0-da61-4623-8407-bcb4b1711db2"&gt;&lt;h4&gt;Topic 2.1: Intelligent Agents&lt;/h4&gt;&lt;br&gt;&lt;h5&gt;&lt;span style="color: #1c8845"&gt;Rational intelligent agents&lt;/span&gt;&lt;/h5&gt;&lt;br&gt;&lt;p&gt;In the heart of Artificial Intelligence, we find the concept of&lt;strong&gt;&amp;nbsp;Rational (or intelligent)&lt;/strong&gt;&amp;nbsp;A&lt;strong&gt;gents.&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;h6&gt;Watch this video then continue reading the topic material.&lt;/h6&gt;&lt;p style="text-align: center;"&gt;&lt;a href="https://mediasite.centennialcollege.ca/Mediasite/Play/116630d3cb49449b8844ba520f2fdbcd1d" data-bbtype="video" data-bbfile="{&amp;quot;src&amp;quot;:&amp;quot;https://mediasite.centennialcollege.ca/Mediasite/Play/116630d3cb49449b8844ba520f2fdbcd1d&amp;quot;,&amp;quot;alt&amp;quot;:&amp;quot;https://mediasite.centennialcollege.ca/Mediasite/Play/116630d3cb49449b8844ba520f2fdbcd1d&amp;quot;}"&gt;https://mediasite.centennialcollege.ca/Mediasite/Play/116630d3cb49449b8844ba520f2fdbcd1d&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;Let us start by defining an &lt;span style="color: #000000"&gt;&lt;strong&gt;"Agent":&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;"An agent is anything that can be viewed as perceiving its environment through sensors and acting upon that environment through actuators."&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The figure below illustrates the architecture of an agent:&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692604_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Agent architecture&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent_architecture.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;width&amp;quot;:651.4625244140625,&amp;quot;height&amp;quot;:412.5884646593734}"&gt;M2_agent_architecture.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An agentâ€™s behavior is described by the&lt;span style="color: #1c8845"&gt; &lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;agent function&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt; &lt;/span&gt;that maps any given&lt;span style="color: #1c8845"&gt; &lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;precept sequence&lt;/strong&gt;&lt;/span&gt; to an &lt;span style="color: #1c8845"&gt;&lt;strong&gt;action&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #000000"&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-family: Comic Sans MS;"&gt;&lt;span style="font-size: 0.875rem;"&gt;&lt;strong&gt;What is an AGENT FUNCTION?&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-family: Comic Sans MS;"&gt;&lt;span style="font-size: 0.875rem;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;span style="font-size: 0.875rem;"&gt;It is defined as an abstract &lt;/span&gt;&lt;span style="color: #000000"&gt;&lt;span style="font-size: 0.875rem;"&gt;mathematical&lt;/span&gt;&lt;/span&gt;&lt;span style="font-size: 0.875rem;"&gt; description.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The &lt;span style="color: #1c8845"&gt;&lt;strong&gt;Agent function&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt; &lt;/span&gt;is implemented by an&lt;span style="color: #000000"&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;AGENT PROGRAM&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #000000"&gt;, which&lt;/span&gt;&amp;nbsp;is considered an&lt;span style="color: #1c8845"&gt;&lt;strong&gt; implementation&lt;/strong&gt;&lt;/span&gt; of the &lt;span style="color: #1c8845"&gt;&lt;strong&gt;agent function&lt;/strong&gt;&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;Let's take a look at some examples:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;A&lt;span style="color: #1c8845"&gt; &lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;robotic agent&lt;/strong&gt;&lt;/span&gt; might have cameras and infrared range finders for sensors and various motors for actuators.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692605_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Robotic agent&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent_robot.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M2_agent_robot.png&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;A&lt;span style="color: #1c8845"&gt; &lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;software agent&lt;/strong&gt;&lt;/span&gt; receives keystrokes, file contents, and network packets as sensory inputs and acts on the environment by displaying on the screen, writing files, and sending network packets.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692606_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Software agent&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent_software.jpg&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/jpeg&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;}"&gt;M2_agent_software.jpg&lt;/a&gt;&lt;/p&gt;&lt;h5&gt;&lt;span style="color: #046ef6"&gt;Agent Example:&lt;/span&gt;&lt;/h5&gt;&lt;br&gt;&lt;p&gt;Let us assume that our agent is a very simple vacuum cleaner that is assigned to clean two locations A &amp;amp; B, as illustrated in the figure below:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692607_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Vacuum agent&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_vacum.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;width&amp;quot;:856.4000244140625,&amp;quot;height&amp;quot;:222.46267655203158}"&gt;M2_vacum.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The vacuum agent&lt;span style="color: #000000"&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt;&lt;strong&gt;perceives&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #1c8845"&gt; &lt;/span&gt;which square it's in and whether there is dirt in the square.&lt;/p&gt;&lt;p&gt;It can then choose to move left, move right, vacuum the square, or do nothing.&lt;/p&gt;&lt;p&gt;One very simple agent function is the following: if the current square is dirty, then vacuum; otherwise, move to the other square.&lt;/p&gt;&lt;p&gt;A partial tabulation of this agent function is shown below:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692608_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Partial tabulation of Vacuum agent&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent_vacum_funtion.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;width&amp;quot;:923.4000244140625,&amp;quot;height&amp;quot;:289.5897616460336}"&gt;M2_agent_vacum_funtion.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Notice that the &lt;span style="color: #1c8845"&gt;&lt;strong&gt;precept sequences&lt;/strong&gt;&lt;/span&gt; are endless and this table can grow infinitely.&lt;/p&gt;&lt;p&gt;Looking at the above figure, we see that various vacuum-world agents can be defined simply by filling in the right-hand column in various ways &lt;span style="color: #1c8845"&gt;&lt;strong&gt;(Actions)&lt;/strong&gt;&lt;/span&gt;. The obvious question, then, is this: &lt;span style="color: #1c8845"&gt;&lt;strong&gt;What is the right way to fill out the table?&lt;/strong&gt;&lt;/span&gt; In other words, what makes an agent good or bad, intelligent or stupid?&lt;/p&gt;&lt;h5&gt;The Concept of Rationality and Good Behavior&lt;/h5&gt;&lt;br&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;A rational agent is one that does the right thing.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;span style="color: #1c8845"&gt;&lt;span style="font-size: 1.125rem;"&gt;But what does it mean to do the right thing?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Well, If the sequence is&lt;span style="color: #000000"&gt;&lt;strong&gt; desirable&lt;/strong&gt;&lt;/span&gt;, then the agent has performed well. This notion of desirability is captured by a&lt;span style="color: #000000"&gt;&lt;strong&gt; performance measure&lt;/strong&gt;&lt;/span&gt; that evaluates any given sequence of &lt;span style="color: #000000"&gt;&lt;strong&gt;environment states&lt;/strong&gt;&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;For example if we have a software agent responsible to filter SPAM e-mails into an especial folder as our friend below:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692609_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Software agent responsible to filter spam e-mails&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent_email.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;width&amp;quot;:377,&amp;quot;height&amp;quot;:323.9024134760317}"&gt;M2_agent_email.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The performance measure could be number of SPAM e-mails arriving into the Inbox.&lt;/p&gt;&lt;p&gt;What is a &lt;span style="color: #000000"&gt;&lt;strong&gt;rational (intelligent) agent&lt;/strong&gt;&lt;/span&gt;?&lt;/p&gt;&lt;p&gt;For each&lt;span style="color: #000000"&gt;&lt;strong&gt; possible precept sequence&lt;/strong&gt;&lt;/span&gt;, a rational agent should &lt;span style="color: #000000"&gt;&lt;strong&gt;select an action that maximizes its performance measure&lt;/strong&gt;&lt;/span&gt;, given the evidence provided by the precept sequence and whatever built-in knowledge the agent has.&lt;/p&gt;&lt;p&gt;&lt;a href="@X@EmbeddedFile.requestUrlStub@X@bbcswebdav/xid-1692610_1" data-bbtype="attachment" data-bbfile="{&amp;quot;alternativeText&amp;quot;:&amp;quot;Rational agent&amp;quot;,&amp;quot;linkName&amp;quot;:&amp;quot;M2_agent _max.png&amp;quot;,&amp;quot;mimeType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;render&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;width&amp;quot;:393,&amp;quot;height&amp;quot;:256.9337016574586}"&gt;M2_agent _max.png&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In other words, the rational agent should always target maximizing the utility.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Let us go back to our vacuum agent. What would be a good performance measure for our vacuum cleaner?&lt;/p&gt;&lt;h6&gt;Option 1&lt;/h6&gt;&lt;p&gt;Measure performance by amount of dirt removed in a shift.&lt;/p&gt;&lt;p&gt;But wait, maybe our agent in this case and in order to maximize the performance measure will start to clean then&amp;nbsp;dump then clean, etc.&lt;img src="https://s.brightspace.com/lib/emoticons/1.0.0/wow-light.svg" alt="wow with light skin tone emoticon"&gt;&lt;/p&gt;&lt;h6&gt;Option 2&lt;/h6&gt;&lt;p&gt;Reward agent for having a clean floor, one point could be awarded for each clean square at each time step. A penalty for electricity consumed and noise generated. &lt;img src="https://s.brightspace.com/lib/emoticons/1.0.0/blush-light.svg" alt="blush with light skin tone emoticon"&gt;&lt;/p&gt;&lt;p&gt;As a general rule it is better to design performance measures according to &lt;span style="color: #000000"&gt;&lt;strong&gt;what one actually wants&lt;/strong&gt;&lt;/span&gt;&lt;span style="color: #000000"&gt; &lt;/span&gt;to be achieved in the environment, rather than according to &lt;span style="color: #000000"&gt;&lt;strong&gt;how one thinks&lt;/strong&gt;&lt;/span&gt; the agents should behave&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;h5&gt;References&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;Artificial intelligence a modern approach by Stuart J. Russell and Peter Norvig, Chapter 2&lt;/li&gt;&lt;li&gt;UC Berkeley CS188 Intro to AI&amp;nbsp;&lt;a href="http://ai.berkeley.edu/home.html"&gt;http://ai.berkeley.edu/home.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</TEXT><TYPE
   value="H"/></BODY><DATES><CREATED value="2024-10-04 18:31:42 EDT"/><UPDATED value="2024-11-11 18:28:22 EST"/><START
   value=""/><END value=""/></DATES><FLAGS><ISAVAILABLE value="true"/><ISFROMCARTRIDGE value="false"/><ISFOLDER
   value="false"/><ISDESCRIBED value="false"/><ISTRACKED value="true"/><ISLESSON value="false"/><ISSEQUENTIAL
   value="false"/><ALLOWGUESTS value="true"/><ALLOWOBSERVERS value="true"/><LAUNCHINNEWWINDOW
   value="false"/><ISREVIEWABLE value="false"/><ISGROUPCONTENT value="false"/><ISSAMPLECONTENT
   value="false"/><PARTIALLYVISIBLE value="false"/><HASTHUMBNAIL value="false"/></FLAGS><CONTENTHANDLER
  value="resource/x-bb-document"/><RENDERTYPE value="REGULAR"/><FOLDERTYPE value=""/><URL value=""/><VIEWMODE
  value="TEXT_ICON_ONLY"/><OFFLINENAME value=""/><OFFLINEPATH value=""/><LINKREF value=""/><PARENTID
  value="_800491_1"/><REVIEWABLEREASON value="NONE"/><VERSION value="3"/><THUMBNAILALT value=""/><AISTATE
  value="No"/><AIACCEPTINGUSER value=""/><EXTENDEDDATA/><FILES/></CONTENT>
